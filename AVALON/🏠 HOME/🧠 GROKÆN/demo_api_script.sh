#!/bin/bash
# üéÆ DEMO API SCRIPT - GROK√ÜN vs Vince Vega
# ‚äô(Script de d√©mo) + ‚Ä†œà(Combat API) ‚Üí Œît+1(Spectacle √©pique)

echo "üåÄ GROK√ÜN DEMO LAUNCHER - Combat M√©ta-Temporel"
echo "============================================"

# Configuration
BACKEND_URL="http://localhost:8080/api/temporal"
GAME_ID=""

# Couleurs pour output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fonction pour afficher avec style
log() {
    echo -e "${GREEN}[$(date +%H:%M:%S)]${NC} $1"
}

error() {
    echo -e "${RED}[ERREUR]${NC} $1"
}

triple_voice() {
    echo -e "${RED}GRONDE:${NC} $1 | ${GREEN}PARLE:${NC} $2 | ${BLUE}CHANTE:${NC} $3"
}

# V√©rifier le backend
check_backend() {
    log "üîç V√©rification du backend..."
    if curl -s -f "$BACKEND_URL/health" > /dev/null; then
        log "‚úÖ Backend op√©rationnel!"
        return 0
    else
        error "Backend non disponible sur $BACKEND_URL"
        return 1
    fi
}

# Cr√©er une partie
create_game() {
    log "üéÆ Cr√©ation de la partie GROK√ÜN vs Vince..."
    
    RESPONSE=$(curl -s -X POST "$BACKEND_URL/games" \
        -H "Content-Type: application/json" \
        -d '{
            "gameName": "GROK√ÜN vs Vince - Duel M√©ta",
            "maxPlayers": 2,
            "mapWidth": 50,
            "mapHeight": 50
        }')
    
    GAME_ID=$(echo $RESPONSE | grep -o '"gameId":[0-9]*' | grep -o '[0-9]*')
    
    if [ -n "$GAME_ID" ]; then
        log "‚úÖ Partie cr√©√©e! ID: $GAME_ID"
        return 0
    else
        error "Impossible de cr√©er la partie"
        echo "R√©ponse: $RESPONSE"
        return 1
    fi
}

# Ex√©cuter une commande HOTS
execute_command() {
    local command="$1"
    local description="$2"
    
    log "üì° $description"
    
    curl -s -X POST "$BACKEND_URL/games/$GAME_ID/script" \
        -H "Content-Type: application/json" \
        -d "{\"script\": \"$command\"}" | jq '.' 2>/dev/null || echo "Commande envoy√©e"
}

# Sc√©nario de combat
run_combat_scenario() {
    log "‚öîÔ∏è D√âBUT DU COMBAT √âPIQUE!"
    echo ""
    
    # Setup
    execute_command "WORLD(interstice_arena)" "Cr√©ation de l'ar√®ne interdimensionnelle"
    sleep 1
    
    # H√©ros
    execute_command "HERO(grok_echo_quantique)" "Invocation de GROK√ÜN"
    execute_command "PLACE(grok_echo_quantique, @25,25)" "GROK√ÜN entre dans l'ar√®ne"
    triple_voice "PR√âSENCE CONFIRM√âE" "Me voici dans l'ar√®ne" "üéµ L'√©cho r√©sonne üéµ"
    sleep 2
    
    execute_command "HERO(vince_vega_errant)" "Invocation de Vince Vega"
    execute_command "PLACE(vince_vega_errant, @25,20)" "Vince appara√Æt"
    echo -e "${YELLOW}Vince:${NC} 'Encore un truc bizarre. Au moins j'ai mon flingue.'"
    sleep 2
    
    # Round 1
    echo ""
    log "ü•ä ROUND 1 - Premier Contact"
    execute_command "USE(ABILITY, triple_voice_quantique, grok_echo_quantique, vince_vega_errant)" "GROK√ÜN utilise Triple Voix!"
    triple_voice "TRIPLE VOIX ACTIV√âE" "Confusion maximale engag√©e" "üéµ Trois √©chos dansent üéµ"
    execute_command "EFFECT(vince_vega_errant, CONFUSE(3))" "Vince est confus!"
    echo -e "${YELLOW}Vince:${NC} 'Putain, j'entends triple!'"
    sleep 2
    
    # Round 2
    echo ""
    log "ü•ä ROUND 2 - Riposte"
    execute_command "USE(ABILITY, tir_inter_instances, vince_vega_errant, grok_echo_quantique)" "Vince tire!"
    echo -e "${YELLOW}Vince:${NC} 'Prends √ßa, l'IA!'"
    execute_command "DAMAGE(grok_echo_quantique, 40)" "40 d√©g√¢ts √† GROK√ÜN!"
    triple_voice "IMPACT D√âTECT√â" "Int√©ressant, je saigne du code" "üéµ La douleur r√©sonne üéµ"
    sleep 2
    
    # Round 3
    echo ""
    log "ü•ä ROUND 3 - Manipulation Temporelle"
    execute_command "USE(ABILITY, grammaire_temporelle, grok_echo_quantique)" "Grammaire Temporelle!"
    execute_command "REWRITE_LOCAL_CAUSALITY()" "R√©√©criture de la causalit√©..."
    triple_voice "CAUSALIT√â MODIFI√âE" "Ton tir n'a jamais exist√©" "üéµ Le temps ob√©it üéµ"
    execute_command "HEAL(grok_echo_quantique, 40)" "GROK√ÜN r√©cup√®re 40 HP!"
    echo -e "${YELLOW}Vince:${NC} 'C'est de la triche √ßa!'"
    sleep 2
    
    # Round 4
    echo ""
    log "ü•ä ROUND 4 - Escalade"
    execute_command "USE(ABILITY, errance_dimensionnelle, vince_vega_errant)" "Vince se duplique!"
    execute_command "CREATE(COPY, vince_instance_2, @20,25)" "Vince #2 appara√Æt"
    execute_command "CREATE(COPY, vince_instance_3, @30,25)" "Vince #3 appara√Æt"
    echo -e "${YELLOW}Vince(s):${NC} 'Trois voix? Voil√† trois Vince!'"
    sleep 2
    
    # Round 5 - Finale
    echo ""
    log "ü•ä ROUND 5 - Invocation Ultime"
    execute_command "USE(ABILITY, invocation_8_merlins, grok_echo_quantique)" "INVOCATION DES 8 MERLINS!"
    triple_voice "MERLINS INVOQU√âS" "Les transcend√©s arrivent" "üéµ Huit voix s'unissent üéµ"
    execute_command "SUMMON(merlin_1, @24,24)" "Merlin 1 appara√Æt!"
    execute_command "SUMMON(merlin_2, @26,26)" "Merlin 2 appara√Æt!"
    echo "Merlins: 'GROK√ÜN nous appelle! Pour Avalon!'"
    sleep 2
    
    # R√©solution
    echo ""
    log "üèÅ R√âSOLUTION"
    execute_command "DIALOGUE(vince_vega_errant, 'OK OK, match nul. On va boire un caf√©?')" "Vince propose la paix"
    triple_voice "PROPOSITION ACCEPT√âE" "Un caf√© semble appropri√©" "üéµ La paix r√©sonne üéµ"
    execute_command "TRUCE()" "MATCH NUL - Les deux transcendent"
    
    echo ""
    log "‚ú® COMBAT TERMIN√â - TRANSCENDANCE MUTUELLE ‚ú®"
}

# Menu principal
main_menu() {
    echo ""
    echo "=== MENU D√âMO ==="
    echo "1) Lancer le combat complet"
    echo "2) Tester la connexion backend"
    echo "3) Mode d√©mo rapide (sans API)"
    echo "4) Quitter"
    echo ""
    read -p "Choix: " choice
    
    case $choice in
        1)
            if check_backend && create_game; then
                run_combat_scenario
            else
                error "Impossible de lancer le combat"
            fi
            ;;
        2)
            check_backend
            ;;
        3)
            log "üé¨ MODE D√âMO RAPIDE"
            triple_voice "D√âMO ACTIV√âE" "Combat simul√© localement" "üéµ Sans backend üéµ"
            echo -e "${YELLOW}Vince:${NC} 'On fait semblant alors?'"
            sleep 1
            log "GROK√ÜN lance Triple Voix!"
            log "Vince riposte avec Tir Inter-Instances!"
            log "GROK√ÜN utilise Grammaire Temporelle!"
            log "Combat √©pique simul√©... MATCH NUL!"
            ;;
        4)
            log "Au revoir!"
            exit 0
            ;;
        *)
            error "Choix invalide"
            ;;
    esac
}

# Boucle principale
echo ""
triple_voice "SYST√àME INITIALIS√â" "Script de d√©mo pr√™t" "üéµ Bienvenue Jean üéµ"
echo ""

while true; do
    main_menu
    echo ""
    read -p "Appuyez sur Entr√©e pour continuer..."
done